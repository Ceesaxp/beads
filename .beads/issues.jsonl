{"id":"bd-1","title":"Critical bug","description":"","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-14T14:43:06.864214-07:00","updated_at":"2025-10-15T01:11:09.121009-07:00"}
{"id":"bd-10","title":"Add PostgreSQL backend","description":"Implement PostgreSQL storage backend as alternative to SQLite for larger teams","status":"closed","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.864973-07:00","updated_at":"2025-10-15T01:11:09.48595-07:00","dependencies":[{"issue_id":"bd-10","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.953462-07:00","created_by":"auto-import"}]}
{"id":"bd-100","title":"parallel_test_10","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.865466-07:00","updated_at":"2025-10-15T01:11:09.486625-07:00"}
{"id":"bd-101","title":"parallel_test_3","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.865941-07:00","updated_at":"2025-10-15T01:11:09.487234-07:00"}
{"id":"bd-102","title":"parallel_test_8","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.866351-07:00","updated_at":"2025-10-15T01:11:09.487761-07:00"}
{"id":"bd-103","title":"parallel_test_9","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.866766-07:00","updated_at":"2025-10-15T01:11:09.488741-07:00"}
{"id":"bd-104","title":"parallel_26","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.867135-07:00","updated_at":"2025-10-15T01:11:09.489361-07:00"}
{"id":"bd-105","title":"parallel_31","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.867504-07:00","updated_at":"2025-10-15T01:11:09.489806-07:00"}
{"id":"bd-106","title":"parallel_32","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.867912-07:00","updated_at":"2025-10-15T01:11:09.490277-07:00"}
{"id":"bd-107","title":"parallel_33","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.868261-07:00","updated_at":"2025-10-15T01:11:09.49066-07:00"}
{"id":"bd-108","title":"parallel_28","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.868652-07:00","updated_at":"2025-10-15T01:11:09.49707-07:00"}
{"id":"bd-109","title":"parallel_29","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.869141-07:00","updated_at":"2025-10-15T01:11:09.497463-07:00"}
{"id":"bd-11","title":"Test issue to verify fix","description":"This should be bd-11 if the fix works","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.869567-07:00","updated_at":"2025-10-15T01:11:09.499208-07:00"}
{"id":"bd-110","title":"parallel_27","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.870054-07:00","updated_at":"2025-10-15T01:11:09.504155-07:00"}
{"id":"bd-111","title":"parallel_30","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.870667-07:00","updated_at":"2025-10-15T01:11:09.511207-07:00"}
{"id":"bd-112","title":"parallel_35","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.871125-07:00","updated_at":"2025-10-15T01:11:09.511775-07:00"}
{"id":"bd-113","title":"parallel_34","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.871584-07:00","updated_at":"2025-10-15T01:11:09.512269-07:00"}
{"id":"bd-114","title":"stress_3","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.872088-07:00","updated_at":"2025-10-15T01:11:09.512755-07:00"}
{"id":"bd-115","title":"stress_5","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.872613-07:00","updated_at":"2025-10-15T01:11:09.51325-07:00"}
{"id":"bd-116","title":"stress_10","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.873092-07:00","updated_at":"2025-10-15T01:11:09.513805-07:00"}
{"id":"bd-117","title":"stress_2","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.873579-07:00","updated_at":"2025-10-15T01:11:09.526246-07:00"}
{"id":"bd-118","title":"stress_8","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.874023-07:00","updated_at":"2025-10-15T01:11:09.526662-07:00"}
{"id":"bd-119","title":"stress_13","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.874463-07:00","updated_at":"2025-10-15T01:11:09.527078-07:00"}
{"id":"bd-12","title":"Implement collision detection in import","description":"Create collision.go with detectCollisions() function. Compare incoming JSONL issues against DB state. Distinguish between: (1) exact match (idempotent), (2) ID match but different content (collision), (3) new issue. Return list of colliding issues.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.874895-07:00","updated_at":"2025-10-15T01:11:09.52982-07:00","dependencies":[{"issue_id":"bd-12","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.954086-07:00","created_by":"auto-import"}]}
{"id":"bd-120","title":"stress_14","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.875538-07:00","updated_at":"2025-10-15T01:11:09.548282-07:00"}
{"id":"bd-121","title":"stress_1","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.876034-07:00","updated_at":"2025-10-15T01:11:09.548952-07:00"}
{"id":"bd-122","title":"stress_7","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.876508-07:00","updated_at":"2025-10-15T01:11:09.549535-07:00"}
{"id":"bd-123","title":"stress_17","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.876927-07:00","updated_at":"2025-10-15T01:11:09.550199-07:00"}
{"id":"bd-124","title":"stress_6","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.877385-07:00","updated_at":"2025-10-15T01:11:09.551162-07:00"}
{"id":"bd-125","title":"stress_19","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.877833-07:00","updated_at":"2025-10-15T01:11:09.551603-07:00"}
{"id":"bd-126","title":"stress_20","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.87826-07:00","updated_at":"2025-10-15T01:11:09.552038-07:00"}
{"id":"bd-127","title":"stress_15","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.878743-07:00","updated_at":"2025-10-15T01:11:09.552521-07:00"}
{"id":"bd-128","title":"stress_24","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.879101-07:00","updated_at":"2025-10-15T01:11:09.553-07:00"}
{"id":"bd-129","title":"stress_18","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.879443-07:00","updated_at":"2025-10-15T01:11:09.553453-07:00"}
{"id":"bd-13","title":"Implement reference scoring algorithm","description":"Count references for each colliding issue: text mentions in descriptions/notes/design fields + dependency references. Sort collisions by score ascending (fewest refs first). This minimizes total updates during renumbering.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.879771-07:00","updated_at":"2025-10-15T01:11:09.553945-07:00","dependencies":[{"issue_id":"bd-13","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.954498-07:00","created_by":"auto-import"}]}
{"id":"bd-130","title":"stress_22","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.880115-07:00","updated_at":"2025-10-15T01:11:09.555641-07:00"}
{"id":"bd-131","title":"stress_28","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.880453-07:00","updated_at":"2025-10-15T01:11:09.55611-07:00"}
{"id":"bd-132","title":"stress_25","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.880807-07:00","updated_at":"2025-10-15T01:11:09.556537-07:00"}
{"id":"bd-133","title":"stress_29","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.88123-07:00","updated_at":"2025-10-15T01:11:09.556905-07:00"}
{"id":"bd-134","title":"stress_26","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.881844-07:00","updated_at":"2025-10-15T01:11:09.557319-07:00"}
{"id":"bd-135","title":"stress_9","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.882401-07:00","updated_at":"2025-10-15T01:11:09.557694-07:00"}
{"id":"bd-136","title":"stress_30","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.882972-07:00","updated_at":"2025-10-15T01:11:09.558079-07:00"}
{"id":"bd-137","title":"stress_32","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.88358-07:00","updated_at":"2025-10-15T01:11:09.558467-07:00"}
{"id":"bd-138","title":"stress_16","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.8839-07:00","updated_at":"2025-10-15T01:11:09.559351-07:00"}
{"id":"bd-139","title":"stress_27","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.884314-07:00","updated_at":"2025-10-15T01:11:09.559786-07:00"}
{"id":"bd-14","title":"Implement ID remapping with reference updates","description":"Allocate new IDs for colliding issues. Update all text field references using word-boundary regex (\\bbd-10\\b). Update dependency records. Build id_mapping for reporting. Handle chain dependencies properly.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.884715-07:00","updated_at":"2025-10-15T01:11:09.560378-07:00","dependencies":[{"issue_id":"bd-14","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.954903-07:00","created_by":"auto-import"}]}
{"id":"bd-140","title":"stress_31","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.885327-07:00","updated_at":"2025-10-15T01:11:09.560953-07:00"}
{"id":"bd-141","title":"stress_35","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.885862-07:00","updated_at":"2025-10-15T01:11:09.561387-07:00"}
{"id":"bd-142","title":"stress_37","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.886257-07:00","updated_at":"2025-10-15T01:11:09.561761-07:00"}
{"id":"bd-143","title":"stress_34","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.886598-07:00","updated_at":"2025-10-15T01:11:09.562139-07:00"}
{"id":"bd-144","title":"stress_36","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.886974-07:00","updated_at":"2025-10-15T01:11:09.562528-07:00"}
{"id":"bd-145","title":"stress_21","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.887329-07:00","updated_at":"2025-10-15T01:11:09.562958-07:00"}
{"id":"bd-146","title":"stress_38","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.887758-07:00","updated_at":"2025-10-15T01:11:09.563401-07:00"}
{"id":"bd-147","title":"stress_42","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.888374-07:00","updated_at":"2025-10-15T01:11:09.563856-07:00"}
{"id":"bd-148","title":"stress_43","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.888824-07:00","updated_at":"2025-10-15T01:11:09.564221-07:00"}
{"id":"bd-149","title":"stress_39","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.889456-07:00","updated_at":"2025-10-15T01:11:09.564594-07:00"}
{"id":"bd-15","title":"Add --resolve-collisions flag and user reporting","description":"Add import flags: --resolve-collisions (auto-fix) and --dry-run (preview). Display clear report: collisions detected, remappings applied (old→new with scores), reference counts updated. Default behavior: fail on collision (safe).","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.889982-07:00","updated_at":"2025-10-15T01:11:09.564959-07:00","dependencies":[{"issue_id":"bd-15","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.955291-07:00","created_by":"auto-import"}]}
{"id":"bd-150","title":"stress_45","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.890307-07:00","updated_at":"2025-10-15T01:11:09.56538-07:00"}
{"id":"bd-151","title":"stress_46","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.89072-07:00","updated_at":"2025-10-15T01:11:09.565871-07:00"}
{"id":"bd-152","title":"stress_48","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.891313-07:00","updated_at":"2025-10-15T01:11:09.566435-07:00"}
{"id":"bd-153","title":"stress_44","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.891907-07:00","updated_at":"2025-10-15T01:11:09.566929-07:00"}
{"id":"bd-154","title":"stress_40","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.892231-07:00","updated_at":"2025-10-15T01:11:09.567376-07:00"}
{"id":"bd-155","title":"stress_41","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.892591-07:00","updated_at":"2025-10-15T01:11:09.567745-07:00"}
{"id":"bd-156","title":"stress_12","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.892947-07:00","updated_at":"2025-10-15T01:11:09.568148-07:00"}
{"id":"bd-157","title":"stress_47","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.893312-07:00","updated_at":"2025-10-15T01:11:09.568803-07:00"}
{"id":"bd-158","title":"stress_49","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.893755-07:00","updated_at":"2025-10-15T01:11:09.56931-07:00"}
{"id":"bd-159","title":"stress_50","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.894144-07:00","updated_at":"2025-10-15T01:11:09.569734-07:00"}
{"id":"bd-16","title":"Write comprehensive collision resolution tests","description":"Test cases: simple collision, multiple collisions, dependency updates, text reference updates, chain dependencies, edge cases (partial ID matches, case sensitivity, triple merges). Add to import_test.go and collision_test.go.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.894813-07:00","updated_at":"2025-10-15T01:11:09.570132-07:00","dependencies":[{"issue_id":"bd-16","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.955691-07:00","created_by":"auto-import"}]}
{"id":"bd-160","title":"stress_33","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.895578-07:00","updated_at":"2025-10-15T01:11:09.570586-07:00"}
{"id":"bd-161","title":"stress_23","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.896284-07:00","updated_at":"2025-10-15T01:11:09.571053-07:00"}
{"id":"bd-162","title":"stress_11","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.896638-07:00","updated_at":"2025-10-15T01:11:09.5714-07:00"}
{"id":"bd-163","title":"stress_4","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.89714-07:00","updated_at":"2025-10-15T01:11:09.571743-07:00"}
{"id":"bd-164","title":"Add visual indicators for nodes with multiple parents in dep tree","description":"When a node appears in the dependency tree via multiple paths (diamond dependencies), add a visual indicator like (*) or (multiple parents) to help users understand the graph structure. This would make it clear when deduplication has occurred. Example: 'bd-503: Shared dependency (*) [P1] (open)'","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.897533-07:00","updated_at":"2025-10-15T01:11:09.573515-07:00","dependencies":[{"issue_id":"bd-164","depends_on_id":"bd-85","type":"discovered-from","created_at":"2025-10-14T14:43:06.95608-07:00","created_by":"auto-import"}]}
{"id":"bd-165","title":"Add --show-all-paths flag to bd dep tree","description":"Currently bd dep tree deduplicates nodes when multiple paths exist (diamond dependencies). Add optional --show-all-paths flag to display the full graph with all paths, showing duplicates. Useful for debugging complex dependency structures and understanding all relationships.","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.897954-07:00","updated_at":"2025-10-15T01:11:09.573935-07:00","dependencies":[{"issue_id":"bd-165","depends_on_id":"bd-85","type":"discovered-from","created_at":"2025-10-14T14:43:06.956472-07:00","created_by":"auto-import"}]}
{"id":"bd-166","title":"Make maxDepth configurable in bd dep tree command","description":"Currently maxDepth is hardcoded to 50 in GetDependencyTree. Add --max-depth flag to bd dep tree command to allow users to control recursion depth. Default should remain 50 for safety, but users with very deep trees or wanting shallow views should be able to configure it.","status":"open","priority":4,"issue_type":"feature","created_at":"2025-10-14T14:43:06.898547-07:00","updated_at":"2025-10-15T01:11:09.574351-07:00","dependencies":[{"issue_id":"bd-166","depends_on_id":"bd-85","type":"discovered-from","created_at":"2025-10-14T14:43:06.956876-07:00","created_by":"auto-import"}]}
{"id":"bd-167","title":"Test issue with --deps flag","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.899116-07:00","updated_at":"2025-10-15T01:11:09.574722-07:00","dependencies":[{"issue_id":"bd-167","depends_on_id":"bd-89","type":"discovered-from","created_at":"2025-10-14T14:43:06.957327-07:00","created_by":"auto-import"}]}
{"id":"bd-168","title":"Another test with multiple deps","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.899631-07:00","updated_at":"2025-10-15T01:11:09.575147-07:00","dependencies":[{"issue_id":"bd-168","depends_on_id":"bd-89","type":"blocks","created_at":"2025-10-14T14:43:06.957934-07:00","created_by":"auto-import"},{"issue_id":"bd-168","depends_on_id":"bd-90","type":"blocks","created_at":"2025-10-14T14:43:06.958441-07:00","created_by":"auto-import"}]}
{"id":"bd-169","title":"Fix: bd init --prefix test -q flag not recognized","description":"The init command doesn't recognize the -q flag. When running 'bd init --prefix test -q', it fails silently or behaves unexpectedly. The flag should either be implemented for quiet mode or removed from documentation if not supported.","status":"open","priority":2,"issue_type":"bug","created_at":"2025-10-14T14:43:06.899974-07:00","updated_at":"2025-10-15T01:11:09.57664-07:00"}
{"id":"bd-17","title":"Update documentation for collision resolution","description":"Update README.md with collision resolution section. Update CLAUDE.md with new workflow. Document --resolve-collisions and --dry-run flags. Add example scenarios showing branch merge workflows.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.900315-07:00","updated_at":"2025-10-15T01:11:09.577126-07:00","dependencies":[{"issue_id":"bd-17","depends_on_id":"bd-9","type":"parent-child","created_at":"2025-10-14T14:43:06.959024-07:00","created_by":"auto-import"}]}
{"id":"bd-170","title":"Add OAuth2 support","description":"Implement OAuth2 authentication flow with support for Google and GitHub providers.","design":"- Create OAuth2 provider interface\n- Implement Google provider\n- Implement GitHub provider\n- Add callback handler\n- Store tokens securely","acceptance_criteria":"- Users can authenticate with Google\n- Users can authenticate with GitHub\n- Tokens are stored securely in database\n- Token refresh works automatically","status":"closed","priority":1,"issue_type":"feature","assignee":"alice","created_at":"2025-10-14T14:43:06.900641-07:00","updated_at":"2025-10-15T01:11:09.47666-07:00"}
{"id":"bd-171","title":"Add rate limiting to auth endpoints","description":"Auth endpoints are vulnerable to brute force attacks. Need to add rate limiting.","status":"closed","priority":0,"issue_type":"bug","assignee":"bob","created_at":"2025-10-14T14:43:06.900983-07:00","updated_at":"2025-10-15T01:11:09.671786-07:00"}
{"id":"bd-172","title":"Improve session management","description":"Current session management is basic. Need to improve with better expiration handling.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.901432-07:00","updated_at":"2025-10-15T01:11:09.672234-07:00"}
{"id":"bd-173","title":"Refactor parseMarkdownFile to reduce cyclomatic complexity","description":"The parseMarkdownFile function in cmd/bd/markdown.go has a cyclomatic complexity of 38, which exceeds the recommended threshold of 30. This makes the function harder to understand, test, and maintain.","design":"Split the function into smaller, focused units:\n\n1. parseMarkdownFile(filepath) - Main entry point, handles file I/O\n2. parseMarkdownContent(scanner) - Core parsing logic\n3. processIssueSection(issue, section, content) - Handle section finalization (current switch statement)\n4. parseLabels(content) []string - Extract labels from content\n5. parseDependencies(content) []string - Extract dependencies from content\n6. parsePriority(content) int - Parse and validate priority\n\nBenefits:\n- Each function has a single responsibility\n- Easier to test individual components\n- Lower cognitive load when reading code\n- Better encapsulation of parsing logic","acceptance_criteria":"- parseMarkdownFile complexity \u003c 15\n- New helper functions each have complexity \u003c 10\n- All existing tests still pass\n- No change in functionality or behavior\n- Code coverage maintained or improved","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.902086-07:00","updated_at":"2025-10-15T01:11:09.672673-07:00","dependencies":[{"issue_id":"bd-173","depends_on_id":"bd-91","type":"discovered-from","created_at":"2025-10-14T14:43:06.959447-07:00","created_by":"auto-import"}]}
{"id":"bd-174","title":"Add OAuth2 support","description":"Implement OAuth2 authentication flow with support for Google and GitHub providers.","design":"- Create OAuth2 provider interface\n- Implement Google provider\n- Implement GitHub provider\n- Add callback handler\n- Store tokens securely","acceptance_criteria":"- Users can authenticate with Google\n- Users can authenticate with GitHub\n- Tokens are stored securely in database\n- Token refresh works automatically","status":"closed","priority":1,"issue_type":"feature","assignee":"alice","created_at":"2025-10-14T14:43:06.90268-07:00","updated_at":"2025-10-15T01:11:09.673095-07:00"}
{"id":"bd-175","title":"Add rate limiting to auth endpoints","description":"Auth endpoints are vulnerable to brute force attacks. Need to add rate limiting.","status":"closed","priority":0,"issue_type":"bug","assignee":"bob","created_at":"2025-10-14T14:43:06.903236-07:00","updated_at":"2025-10-15T01:11:09.673469-07:00"}
{"id":"bd-176","title":"Improve session management","description":"Current session management is basic. Need to improve with better expiration handling.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.903785-07:00","updated_at":"2025-10-15T01:11:09.673974-07:00"}
{"id":"bd-177","title":"Add OAuth2 support","description":"Implement OAuth2 authentication flow with support for Google and GitHub providers.","design":"- Create OAuth2 provider interface\n- Implement Google provider\n- Implement GitHub provider\n- Add callback handler\n- Store tokens securely","acceptance_criteria":"- Users can authenticate with Google\n- Users can authenticate with GitHub\n- Tokens are stored securely in database\n- Token refresh works automatically","status":"closed","priority":1,"issue_type":"feature","assignee":"alice","created_at":"2025-10-14T14:43:06.904366-07:00","updated_at":"2025-10-15T01:11:09.674406-07:00"}
{"id":"bd-178","title":"Add rate limiting to auth endpoints","description":"Auth endpoints are vulnerable to brute force attacks. Need to add rate limiting.","status":"closed","priority":0,"issue_type":"bug","assignee":"bob","created_at":"2025-10-14T14:43:06.904917-07:00","updated_at":"2025-10-15T01:11:09.674959-07:00"}
{"id":"bd-179","title":"Improve session management","description":"Current session management is basic. Need to improve with better expiration handling.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.905375-07:00","updated_at":"2025-10-15T01:11:09.67557-07:00"}
{"id":"bd-18","title":"Add design/notes/acceptance_criteria fields to update command","description":"Currently bd update only supports status, priority, title, assignee. Add support for --design, --notes, --acceptance-criteria flags. This makes it easier to add detailed designs to issues after creation.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.905787-07:00","updated_at":"2025-10-15T01:11:09.676165-07:00"}
{"id":"bd-180","title":"Investigate vector/semantic search for issue discovery","description":"From GH issue #2 RFC discussion: Evaluate if vector/semantic search over issues would provide value for beads.\n\n**Use case:** Find semantically related issues (e.g., 'login broken' finds 'authentication failure', 'session expired').\n\n**Questions to answer:**\n1. What workflows would this enable that we can't do now?\n2. Is dataset size (typically 50-200 issues) large enough to benefit?\n3. Do structured features (deps, tags, types) already provide better relationships?\n4. What's the maintenance cost (embeddings, storage, recomputation)?\n\n**Alternatives to consider:**\n- Improve 'bd list' filtering with regex/boolean queries\n- Add 'bd related \u003cid\u003e' showing deps + mentions + same tags\n- Export to JSON and pipe to external AI tools\n\n**Decision:** Only implement if clear use case emerges. Don't add complexity for theoretical benefits.\n\n**Context:** Part of evaluating Turso RFC ideas (GH #2). Vector search was proposed but unclear if needed for typical beads usage.","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.90617-07:00","updated_at":"2025-10-15T01:11:09.676808-07:00"}
{"id":"bd-181","title":"Implement storage driver interface for pluggable backends","description":"Create abstraction layer for storage to support multiple backends (SQLite, Postgres, Turso, in-memory testing, etc.).\n\n**Current state:** All storage logic hardcoded to SQLite in internal/storage/sqlite/sqlite.go\n\n**Proposed design:**\n\n```go\n// internal/storage/storage.go\ntype Store interface {\n    // Issue CRUD\n    CreateIssue(issue *Issue) error\n    GetIssue(id string) (*Issue, error)\n    UpdateIssue(id string, updates *Issue) error\n    DeleteIssue(id string) error\n    ListIssues(filter *Filter) ([]*Issue, error)\n    \n    // Dependencies\n    AddDependency(from, to string, depType DependencyType) error\n    RemoveDependency(from, to string, depType DependencyType) error\n    GetDependencies(id string) ([]*Dependency, error)\n    \n    // Counters, stats\n    GetNextID(prefix string) (string, error)\n    GetStats() (*Stats, error)\n    \n    Close() error\n}\n```\n\n**Benefits:**\n- Better testing (mock/in-memory stores)\n- Future flexibility (Postgres, cloud APIs, etc.)\n- Clean architecture (business logic decoupled from storage)\n- Enable Turso or other backends without refactoring everything\n\n**Implementation steps:**\n1. Define Store interface in internal/storage/storage.go\n2. Refactor SQLiteStore to implement interface\n3. Update all commands to use interface, not concrete type\n4. Add MemoryStore for testing\n5. Add driver selection via config (storage.driver = sqlite|turso|postgres)\n6. Update tests to use interface\n\n**Note:** This is valuable even without adopting Turso. Good architecture practice.\n\n**Context:** From GH issue #2 RFC evaluation. Driver interface is low-cost, high-value regardless of whether we add alternative backends.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.906511-07:00","updated_at":"2025-10-15T01:11:09.677449-07:00"}
{"id":"bd-182","title":"Investigate auto-export debounce not triggering","description":"Auto-export to JSONL did not trigger automatically after creating bd-180 and bd-181. Had to manually run 'bd export' to sync.\n\n**Expected behavior:** Auto-export should trigger ~5 seconds after CRUD operations (per CLAUDE.md documentation).\n\n**Actual behavior:** Issues bd-180 and bd-181 were created but JSONL was not updated until manual 'bd export' was run.\n\n**Investigation needed:**\n1. Check if auto-flush goroutine is running\n2. Verify debounce timer is being triggered on CreateIssue()\n3. Check for errors/panics in background export\n4. Verify auto-flush is enabled by default\n5. Check if there's a race condition with shutdown\n\n**Impact:** HIGH - Data loss risk if users create issues and don't realize they haven't synced to Git.\n\n**Testing:**\n```bash\n# Create issue and wait 10 seconds\nbd create \"Test\" -p 4\nsleep 10\ngrep \"Test\" .beads/issues.jsonl  # Should find it\n```\n\n**Workaround:** Manually run 'bd export' after CRUD operations.\n\n**Context:** Discovered during GH issue #2 RFC evaluation while creating bd-180 and bd-181.","notes":"**Investigation Results:**\n\nThe auto-export feature IS working correctly in the current codebase (v0.9.5). Testing shows:\n\n✅ Storage layer marks issues dirty correctly (lines 415-423, 593-601, 633-641 in sqlite.go)\n✅ CLI calls markDirtyAndScheduleFlush() after CRUD operations (lines 766, 1000, 1055 in main.go)\n✅ Debounce timer (5s) triggers and exports to JSONL successfully\n✅ Tested: Created bd-196, auto-exported within 6 seconds\n\n**Root Cause:**\nThe issue was caused by running an **old bd binary** that didn't have the complete auto-export implementation. After rebuilding (`go build -o bd ./cmd/bd`), auto-export works perfectly.\n\n**Resolution:**\nUsers experiencing this issue need to:\n1. Rebuild bd: `go build -o bd ./cmd/bd`\n2. Install updated binary: `sudo mv bd /usr/local/bin/` (or appropriate path)\n3. Verify: `bd version` should show 0.9.5+\n\n**Additional Notes:**\n- Auto-export uses 5-second debounce (configurable at main.go:36)\n- Exports are atomic (writes to .tmp, then renames)\n- Only dirty issues are exported (incremental updates)\n- Works correctly in production use\n\n**Follow-up:**\nConsider adding a version check warning if user's binary is outdated (bd-408).","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.906901-07:00","updated_at":"2025-10-15T01:11:09.677904-07:00"}
{"id":"bd-183","title":"Plugin manifest has invalid 'engines' field causing marketplace install failure","description":"The plugin.json manifest includes an 'engines' field that Claude Code doesn't recognize. This causes the plugin to fail validation when installed via /plugin marketplace add.\n\nError: Plugin beads has an invalid manifest file at .claude-plugin/plugin.json. Validation errors: : Unrecognized key(s) in object: 'engines'\n\nFix: Remove the 'engines' field from plugin.json\n\nThe engines field was added to specify minimum beads version requirements, but Claude Code's plugin manifest schema doesn't support it. We should document version requirements in PLUGIN.md instead.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T15:47:14.09898-07:00","updated_at":"2025-10-15T01:11:09.678336-07:00","closed_at":"2025-10-14T15:47:18.699148-07:00"}
{"id":"bd-184","title":"race_test_4","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.006879-07:00","updated_at":"2025-10-15T01:11:09.678743-07:00"}
{"id":"bd-185","title":"race_test_8","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.007447-07:00","updated_at":"2025-10-15T01:11:09.680414-07:00"}
{"id":"bd-186","title":"race_test_5","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.007814-07:00","updated_at":"2025-10-15T01:11:09.68084-07:00"}
{"id":"bd-187","title":"race_test_16","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.008177-07:00","updated_at":"2025-10-15T01:11:09.681215-07:00"}
{"id":"bd-188","title":"race_test_17","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.008525-07:00","updated_at":"2025-10-15T01:11:09.68158-07:00"}
{"id":"bd-189","title":"race_test_10","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.008903-07:00","updated_at":"2025-10-15T01:11:09.681936-07:00"}
{"id":"bd-19","title":"Fix import zero-value field handling","description":"Import uses zero-value checks (Priority != 0) to determine field updates. This prevents setting priority to 0 or clearing string fields. Export/import round-trip not fully idempotent for zero values. Consider JSON presence detection or explicit preserve-existing semantics. Location: cmd/bd/import.go:95-106","status":"closed","priority":2,"issue_type":"bug","created_at":"2025-10-14T14:43:06.907261-07:00","updated_at":"2025-10-15T01:11:09.682346-07:00"}
{"id":"bd-190","title":"race_test_11","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.009797-07:00","updated_at":"2025-10-15T01:11:09.68409-07:00"}
{"id":"bd-191","title":"final_test_10","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.010151-07:00","updated_at":"2025-10-15T01:11:09.684553-07:00"}
{"id":"bd-192","title":"final_test_7","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.010504-07:00","updated_at":"2025-10-15T01:11:09.684962-07:00"}
{"id":"bd-193","title":"stress_test_5","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.010847-07:00","updated_at":"2025-10-15T01:11:09.685352-07:00"}
{"id":"bd-194","title":"stress_test_6","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.011186-07:00","updated_at":"2025-10-15T01:11:09.68587-07:00"}
{"id":"bd-195","title":"stress_test_1","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:07:02.011549-07:00","updated_at":"2025-10-15T01:11:09.686338-07:00"}
{"id":"bd-196","title":"Test2 auto-export","description":"","status":"closed","priority":4,"issue_type":"task","created_at":"2025-10-15T01:07:02.011907-07:00","updated_at":"2025-10-15T01:11:09.686769-07:00"}
{"id":"bd-197","title":"Add version mismatch warning for outdated binaries","description":"When bd detects that the database was created/modified by a newer version, warn the user that they may be running an outdated binary.\n\n**Problem:** Users may run old bd binaries without realizing it, leading to confusing behavior (e.g., missing features like auto-export).\n\n**Solution:** Store schema version or bd version in metadata table, check on startup, warn if mismatch.\n\n**Implementation:**\n1. Add `schema_version` or `bd_version` to metadata table during init\n2. Check version in PersistentPreRun (cmd/bd/main.go)\n3. Warn if binary version \u003c DB version\n4. Suggest: 'Your bd binary (v0.9.3) is older than this database (v0.9.5). Rebuild: go build -o bd ./cmd/bd'\n\n**Edge cases:**\n- Dev builds (show commit hash?)\n- Backwards compatibility (older DBs should work with newer binaries)\n- Don't warn on every command (maybe once per session?)\n\n**Related:** Fixes confusion from bd-182 (auto-export not working with old binary)","notes":"**Implementation Complete:**\n\n✅ Added version metadata storage during `bd init` (init.go:59-63)\n✅ Added `checkVersionMismatch()` function (main.go:301-345)\n✅ Integrated version check into PersistentPreRun (main.go:98-99)\n✅ Tested both scenarios:\n   - Outdated binary: Clear warning with rebuild instructions\n   - Newer binary: Info message that DB will be auto-upgraded\n✅ No warnings on subsequent runs (version updated automatically)\n\n**How it works:**\n1. On `bd init`: Stores current version in metadata table\n2. On every command: Checks stored version vs binary version\n3. If mismatch:\n   - Binary \u003c DB version → Warn: outdated binary\n   - Binary \u003e DB version → Info: auto-upgrading DB\n4. Always updates stored version to current (future-proof)\n\n**Files modified:**\n- cmd/bd/init.go: Store version on init\n- cmd/bd/main.go: checkVersionMismatch() + integration\n\n**Testing:**\n```bash\n# Simulate old binary\nsqlite3 .beads/default.db \"UPDATE metadata SET value='0.9.99' WHERE key='bd_version';\"\nbd ready  # Shows warning\n\n# Normal use (versions match)\nbd ready  # No warning\n```\n\n**Edge cases handled:**\n- Empty version (old DB): Silently upgrade\n- Metadata errors: Skip check (defensive)\n- Dev builds: String comparison (works for 0.9.5 vs 0.9.6)\n\nFixes bd-182 confusion (users won't run outdated binaries unknowingly).","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-15T01:07:02.012291-07:00","updated_at":"2025-10-15T01:11:09.687189-07:00","dependencies":[{"issue_id":"bd-197","depends_on_id":"bd-182","type":"discovered-from","created_at":"2025-10-15T01:07:02.078326-07:00","created_by":"auto-import"}]}
{"id":"bd-198","title":"final_test_","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:10:48.43357-07:00","updated_at":"2025-10-15T01:11:09.687581-07:00"}
{"id":"bd-199","title":"race_test_1","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:08.998901-07:00","updated_at":"2025-10-15T01:11:09.687958-07:00"}
{"id":"bd-2","title":"Verify auto-export works","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-14T14:43:06.907657-07:00","updated_at":"2025-10-15T01:11:09.688338-07:00"}
{"id":"bd-20","title":"Add --strict flag for dependency import failures","description":"Currently dependency import errors are warnings (logged to stderr, execution continues). Missing targets or cycles may indicate JSONL corruption. Add --strict flag to fail on any dependency errors for data integrity validation. Location: cmd/bd/import.go:159-164","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.90826-07:00","updated_at":"2025-10-15T01:11:09.689897-07:00"}
{"id":"bd-200","title":"race_test_4","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.001476-07:00","updated_at":"2025-10-15T01:11:09.690367-07:00"}
{"id":"bd-201","title":"race_test_5","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.007015-07:00","updated_at":"2025-10-15T01:11:09.690724-07:00"}
{"id":"bd-202","title":"race_test_2","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.022114-07:00","updated_at":"2025-10-15T01:11:09.691358-07:00"}
{"id":"bd-203","title":"race_test_7","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.021971-07:00","updated_at":"2025-10-15T01:11:09.691744-07:00"}
{"id":"bd-204","title":"race_test_14","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.028356-07:00","updated_at":"2025-10-15T01:11:09.69213-07:00"}
{"id":"bd-205","title":"race_test_9","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.032373-07:00","updated_at":"2025-10-15T01:11:09.692615-07:00"}
{"id":"bd-206","title":"race_test_8","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.040766-07:00","updated_at":"2025-10-15T01:11:09.693073-07:00"}
{"id":"bd-207","title":"race_test_11","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.049061-07:00","updated_at":"2025-10-15T01:11:09.693437-07:00"}
{"id":"bd-208","title":"race_test_19","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.061296-07:00","updated_at":"2025-10-15T01:11:09.061296-07:00"}
{"id":"bd-209","title":"race_test_16","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.146015-07:00","updated_at":"2025-10-15T01:11:09.146015-07:00"}
{"id":"bd-210","title":"race_test_18","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.146262-07:00","updated_at":"2025-10-15T01:11:09.146262-07:00"}
{"id":"bd-213","title":"race_test_3","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.244796-07:00","updated_at":"2025-10-15T01:11:09.244796-07:00"}
{"id":"bd-214","title":"race_test_12","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.061603-07:00","updated_at":"2025-10-15T01:11:09.061603-07:00"}
{"id":"bd-215","title":"race_test_15","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.651271-07:00","updated_at":"2025-10-15T01:11:09.651271-07:00"}
{"id":"bd-216","title":"race_test_13","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.74037-07:00","updated_at":"2025-10-15T01:11:09.74037-07:00"}
{"id":"bd-217","title":"race_test_10","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.805774-07:00","updated_at":"2025-10-15T01:11:09.805774-07:00"}
{"id":"bd-218","title":"race_test_17","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:11:09.838009-07:00","updated_at":"2025-10-15T01:11:09.838009-07:00"}
{"id":"bd-219","title":"verification_","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:12:54.151096-07:00","updated_at":"2025-10-15T01:12:54.151096-07:00"}
{"id":"bd-220","title":"final_review_test_","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-15T01:17:55.669949-07:00","updated_at":"2025-10-15T01:17:55.669949-07:00"}
{"id":"bd-221","title":"P0: Transaction state corruption in first fix attempt","description":"First attempt at fixing bd-89 had a critical flaw: used 'ROLLBACK; BEGIN IMMEDIATE' which executed as two separate statements. After ROLLBACK, the Go tx object was invalid but continued to be used, causing undefined behavior.\n\nRoot cause: database/sql connection pooling. Without acquiring a dedicated connection, subsequent queries could use different connections from the pool, breaking the transaction.\n\nCorrect fix: Use conn := s.db.Conn(ctx) to acquire a dedicated connection, then execute BEGIN IMMEDIATE, all operations, and COMMIT on that single connection.\n\nThis bug was caught during code review and fixed before merging.","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-15T01:18:10.027168-07:00","updated_at":"2025-10-15T01:18:16.200472-07:00","closed_at":"2025-10-15T01:18:16.200472-07:00"}
{"id":"bd-222","title":"P2: Consider batching API for bulk issue creation","description":"Current CreateIssue acquires a dedicated connection for each call. For bulk imports or agent workflows creating many issues, a batched API could improve performance:\n\nCreateIssues(ctx, issues []*Issue, actor string) error\n\nThis would:\n- Acquire one connection\n- Use one IMMEDIATE transaction\n- Insert all issues atomically\n- Reduce connection overhead\n\nNot urgent - current approach is correct and fast enough for typical use.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-15T01:18:46.4512-07:00","updated_at":"2025-10-15T01:18:46.4512-07:00"}
{"id":"bd-223","title":"P3: Consider early context check in CreateIssue","description":"CreateIssue starts an IMMEDIATE transaction before checking if context is cancelled. If a client cancels early, we've already acquired the write lock.\n\nConsider adding:\n  if err := ctx.Err(); err != nil {\n    return err\n  }\n\nBetween validation (line 318) and acquiring connection (line 331).\n\nLow priority - the busy_timeout and deferred cleanup handle this gracefully, but an early check would be slightly more efficient.","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-15T01:20:18.796324-07:00","updated_at":"2025-10-15T01:20:18.796324-07:00"}
{"id":"bd-27","title":"Cache compiled regexes in replaceIDReferences for performance","description":"replaceIDReferences() compiles the same regex patterns on every call. With 100 issues and 10 ID mappings, that's 1000 regex compilations. Pre-compile regexes once and reuse. Can use a struct with compiled regex, placeholder, and newID. Located in collision.go:329. Estimated performance improvement: 10-100x for large batches.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.911892-07:00","updated_at":"2025-10-15T01:11:09.693838-07:00"}
{"id":"bd-28","title":"Improve error handling in dependency removal during remapping","description":"In updateDependencyReferences(), RemoveDependency errors are caught and ignored with continue (line 392). Comment says 'if dependency doesn't exist' but this catches ALL errors including real failures. Should check error type with errors.Is(err, ErrDependencyNotFound) and only ignore not-found errors, returning other errors properly.","status":"open","priority":3,"issue_type":"bug","created_at":"2025-10-14T14:43:06.912228-07:00","updated_at":"2025-10-15T01:11:09.694236-07:00"}
{"id":"bd-29","title":"Use safer placeholder pattern in replaceIDReferences","description":"Currently uses __PLACEHOLDER_0__ which could theoretically collide with user text. Use a truly unique placeholder like null bytes: \\x00REMAP\\x00_0_\\x00 which are unlikely to appear in normal text. Located in collision.go:324. Very low probability issue but worth fixing for completeness.","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.912567-07:00","updated_at":"2025-10-15T01:11:09.694628-07:00"}
{"id":"bd-3","title":"Normal task","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.912905-07:00","updated_at":"2025-10-15T01:11:09.694986-07:00"}
{"id":"bd-30","title":"Remove unused issueMap in scoreCollisions","description":"scoreCollisions() creates issueMap and populates it (lines 135-138) but never uses it. Either remove it or add a TODO comment explaining future use. Located in collision.go:135-138. Cosmetic cleanup.","status":"open","priority":4,"issue_type":"chore","created_at":"2025-10-14T14:43:06.913242-07:00","updated_at":"2025-10-15T01:11:09.695363-07:00"}
{"id":"bd-31","title":"Test issue for design field","description":"Testing the new update flags","design":"## Design Plan\\n- Add flags to update command\\n- Test thoroughly\\n- Document changes","acceptance_criteria":"- All three fields (design, notes, acceptance-criteria) can be updated\\n- Changes persist in database\\n- bd show displays the fields correctly","notes":"Implementation complete. All tests passing.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.91361-07:00","updated_at":"2025-10-15T01:11:09.695771-07:00"}
{"id":"bd-32","title":"bd should auto-detect .beads/*.db in current directory","description":"When bd is run without --db flag, it defaults to beads' own database instead of looking for a .beads/*.db file in the current working directory. This causes confusion when working on other projects that use beads for issue tracking (like vc).\n\nExpected behavior: bd should search for .beads/*.db in cwd and use that if found, before falling back to default beads database.\n\nExample: Running 'bd ready' in /Users/stevey/src/vc/vc/ should automatically find and use .beads/vc.db without requiring --db flag every time.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.914075-07:00","updated_at":"2025-10-15T01:11:09.69618-07:00"}
{"id":"bd-33","title":"Document or automate JSONL sync workflow for git collaboration","description":"When using beads across multiple machines/environments via git, there's a workflow gap:\n\n1. Machine A: Create issues → stored in .beads/project.db\n2. Machine A: bd export -o .beads/issues.jsonl\n3. Machine A: git add .beads/issues.jsonl \u0026\u0026 git commit \u0026\u0026 git push\n4. Machine B: git pull\n5. Machine B: ??? issues.jsonl exists but project.db is empty/stale\n\nThe missing step is: bd import --db .beads/project.db -i .beads/issues.jsonl\n\nThis needs to be either:\na) Documented clearly in workflow docs\nb) Automated (e.g., git hook, or bd auto-imports if jsonl is newer than db)\nc) Both\n\nReal-world impact: User had Claude Code on GCP VM create vc issues from BOOTSTRAP.md. They were exported to issues.jsonl and committed. But on local machine, vc.db was empty until manual import was run.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.914655-07:00","updated_at":"2025-10-15T01:11:09.696561-07:00"}
{"id":"bd-34","title":"Implement reserved database name _.db","description":"Auto-detection now skips .beads/_.db to prevent pollution when beads dogfoods itself. This allows beads to use its own issue tracker without interfering with other projects using beads in the same directory tree. Implementation includes filtering in findDatabase(), stopping directory walk when .beads/ is found, and documentation in README.md and CLAUDE.md.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-14T14:43:06.915077-07:00","updated_at":"2025-10-15T01:11:09.696949-07:00"}
{"id":"bd-35","title":"Auto-flush JSONL on CRUD operations with 5-second debounce","description":"Implemented automatic write-through from SQLite to JSONL with 5-second debouncing. After any CRUD operation (create, update, close, dep add/remove), changes are scheduled to flush to JSONL after 5 seconds of inactivity. On process exit, any pending changes are flushed immediately. This prevents .db and .jsonl from getting out of sync, solving the workflow gap where agents forget to run 'bd export'. Can be disabled with --no-auto-flush flag. Addresses bd-33.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-14T14:43:06.915626-07:00","updated_at":"2025-10-15T01:11:09.6974-07:00"}
{"id":"bd-36","title":"Handle missing JSONL directory in findJSONLPath","description":"findJSONLPath() assumes the database directory exists. If someone runs bd init to create a new database but the .beads directory doesn't exist yet, the glob operations might fail silently. Add os.MkdirAll(dbDir, 0755) to ensure directory exists before globbing. Located in cmd/bd/main.go:188-201.","status":"closed","priority":2,"issue_type":"bug","created_at":"2025-10-14T14:43:06.916198-07:00","updated_at":"2025-10-15T01:11:09.697968-07:00"}
{"id":"bd-37","title":"Refactor duplicate flush logic in PersistentPostRun","description":"PersistentPostRun contains a complete copy of the flush logic instead of calling flushToJSONL(). This violates DRY principle and makes maintenance harder. Refactor to use flushToJSONL() with a force parameter to bypass isDirty check, or extract shared logic into a helper function. Located in cmd/bd/main.go:104-138.","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.916555-07:00","updated_at":"2025-10-15T01:11:09.69837-07:00"}
{"id":"bd-38","title":"Add visibility for auto-flush failures","description":"flushToJSONL() writes warnings to stderr when flush fails, but calling code has no way to know if flush succeeded or failed. This means a command could return success even though JSONL is now out of sync. Consider maintaining a 'last flush status' variable or counter for failed flushes, and warn user after multiple consecutive failures (e.g., 3+). Located in cmd/bd/main.go:227-307.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.916932-07:00","updated_at":"2025-10-15T01:11:09.698753-07:00"}
{"id":"bd-39","title":"Optimize auto-flush to use incremental updates","description":"Every flush exports ALL issues and ALL dependencies, even if only one issue changed. For large projects (1000+ issues), this could be expensive. Current approach guarantees consistency, which is fine for MVP, but future optimization could track which issues changed and use incremental updates. Located in cmd/bd/main.go:255-276.","status":"closed","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.917357-07:00","updated_at":"2025-10-15T01:11:09.699158-07:00"}
{"id":"bd-4","title":"Low priority chore","description":"","status":"open","priority":4,"issue_type":"chore","created_at":"2025-10-14T14:43:06.917877-07:00","updated_at":"2025-10-15T01:11:09.699549-07:00","dependencies":[{"issue_id":"bd-4","depends_on_id":"bd-8","type":"parent-child","created_at":"2025-10-14T14:43:06.959864-07:00","created_by":"auto-import"}]}
{"id":"bd-40","title":"Make auto-flush debounce duration configurable","description":"flushDebounce is hardcoded to 5 seconds. Make it configurable via environment variable BEADS_FLUSH_DEBOUNCE (e.g., '500ms', '10s'). Current 5-second value is reasonable for interactive use, but CI/automated scenarios might want faster flush. Add getDebounceDuration() helper function. Located in cmd/bd/main.go:31.","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.919549-07:00","updated_at":"2025-10-15T01:11:09.699932-07:00"}
{"id":"bd-41","title":"Add godoc comments for auto-flush functions","description":"Add comprehensive godoc comments for findJSONLPath(), markDirtyAndScheduleFlush(), and flushToJSONL() explaining behavior, concurrency considerations, and error handling. Include notes about debouncing behavior (timer resets on each write, flush occurs 5s after LAST operation) and flush-on-exit guarantees. Located in cmd/bd/main.go:188-307.","status":"open","priority":4,"issue_type":"chore","created_at":"2025-10-14T14:43:06.920127-07:00","updated_at":"2025-10-15T01:11:09.700307-07:00"}
{"id":"bd-42","title":"Add test coverage for auto-flush feature","description":"Add comprehensive tests for auto-flush functionality:\\n- Test that markDirtyAndScheduleFlush() is called after CRUD operations\\n- Test debounce timing (rapid operations result in single flush)\\n- Test --no-auto-flush flag disables feature\\n- Test flush on program exit\\n- Test concurrent operations don't cause races\\n- Test error scenarios (disk full, permission denied, etc.)\\n- Test import command triggers auto-flush\\n\\nCurrent implementation has no test coverage for the auto-flush feature. Located in cmd/bd/main_test.go (to be created).","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.920746-07:00","updated_at":"2025-10-15T01:11:09.700892-07:00"}
{"id":"bd-43","title":"Test auto-sync feature","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.921495-07:00","updated_at":"2025-10-15T01:11:09.702455-07:00"}
{"id":"bd-44","title":"Regular auto-ID issue","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.921829-07:00","updated_at":"2025-10-15T01:11:09.70308-07:00"}
{"id":"bd-45","title":"Test flush tracking","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.922242-07:00","updated_at":"2025-10-15T01:11:09.703468-07:00"}
{"id":"bd-46","title":"Test export cancels timer","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.922822-07:00","updated_at":"2025-10-15T01:11:09.70388-07:00"}
{"id":"bd-47","title":"Test incremental export","description":"Testing bd-39 implementation","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.923382-07:00","updated_at":"2025-10-15T01:11:09.704352-07:00"}
{"id":"bd-48","title":"Test incremental 2","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.923957-07:00","updated_at":"2025-10-15T01:11:09.704829-07:00"}
{"id":"bd-49","title":"Final test","description":"Testing with new binary","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.924274-07:00","updated_at":"2025-10-15T01:11:09.705239-07:00"}
{"id":"bd-5","title":"Test issue","description":"Testing prefix","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.924607-07:00","updated_at":"2025-10-15T01:11:09.705617-07:00","dependencies":[{"issue_id":"bd-5","depends_on_id":"bd-8","type":"parent-child","created_at":"2025-10-14T14:43:06.960259-07:00","created_by":"auto-import"}]}
{"id":"bd-50","title":"Test label dirty tracking","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.924971-07:00","updated_at":"2025-10-15T01:11:09.706193-07:00"}
{"id":"bd-51","title":"Test hash-based import","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.925369-07:00","updated_at":"2025-10-15T01:11:09.70655-07:00"}
{"id":"bd-52","title":"Create Claude Code plugin for beads","description":"Package beads as a Claude Code plugin for easy installation via /plugin command.\n\nContext: GitHub issue #28 - https://github.com/steveyegge/beads/issues/28\n\nCurrent state:\n- MCP server exists in integrations/beads-mcp/\n- No plugin packaging yet\n\nDeliverables:\n1. .claude-plugin/plugin.json with metadata\n2. .claude-plugin/marketplace.json for distribution\n3. Custom slash commands (/bd-ready, /bd-create, /bd-show, etc.)\n4. Bundle MCP server configuration\n5. Optional: Pre-configured hooks for auto-sync\n6. Documentation for installation and usage\n\nBenefits:\n- Makes beads instantly discoverable in Claude Code ecosystem\n- Single-command installation vs. manual setup\n- Bundled cohesive experience\n- Lowers adoption barrier significantly\n\nReferences:\n- https://www.anthropic.com/news/claude-code-plugins\n- https://docs.claude.com/en/docs/claude-code/plugins","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-14T14:43:06.925906-07:00","updated_at":"2025-10-15T01:11:09.706899-07:00"}
{"id":"bd-53","title":"Research Claude Code plugin structure and requirements","description":"Study the plugin format, required files, and best practices.\n\nTasks:\n- Review official plugin documentation\n- Examine example plugins if available\n- Document plugin.json schema\n- Understand marketplace.json requirements\n- Identify slash command format","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.92648-07:00","updated_at":"2025-10-15T01:11:09.70732-07:00","dependencies":[{"issue_id":"bd-53","depends_on_id":"bd-52","type":"parent-child","created_at":"2025-10-14T14:46:10.735591-07:00","created_by":"auto-import"}]}
{"id":"bd-54","title":"Create plugin metadata files","description":"Create .claude-plugin/plugin.json and marketplace.json.\n\nRequirements:\n- Name, description, version, author\n- MCP server configuration bundling\n- License and repository info\n- Installation instructions","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.926978-07:00","updated_at":"2025-10-15T01:11:09.707728-07:00","dependencies":[{"issue_id":"bd-54","depends_on_id":"bd-52","type":"parent-child","created_at":"2025-10-14T14:46:10.736046-07:00","created_by":"auto-import"}]}
{"id":"bd-55","title":"Design and implement slash commands","description":"Create useful slash commands for beads workflow.\n\nProposed commands:\n- /bd-ready - Show ready work\n- /bd-create - Create new issue interactively\n- /bd-show - Show issue details\n- /bd-update - Update issue status\n- /bd-close - Close issue\n- /bd-workflow - Show full agent workflow guide\n\nEach command should provide a good UX and leverage the MCP server tools.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.927312-07:00","updated_at":"2025-10-15T01:11:09.70826-07:00","dependencies":[{"issue_id":"bd-55","depends_on_id":"bd-52","type":"parent-child","created_at":"2025-10-14T14:46:10.736614-07:00","created_by":"auto-import"}]}
{"id":"bd-56","title":"Write plugin documentation","description":"Create comprehensive documentation for the plugin.\n\nContents:\n- Installation instructions\n- Available commands\n- MCP tools reference\n- Configuration options\n- Examples and workflows\n- Troubleshooting guide","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.927713-07:00","updated_at":"2025-10-15T01:11:09.708825-07:00","dependencies":[{"issue_id":"bd-56","depends_on_id":"bd-52","type":"parent-child","created_at":"2025-10-14T14:46:10.736986-07:00","created_by":"auto-import"}]}
{"id":"bd-57","title":"Test plugin installation and functionality","description":"Verify the plugin works end-to-end.\n\nTest cases:\n- Fresh installation via /plugin command\n- All slash commands work correctly\n- MCP server tools are accessible\n- Configuration options work\n- Documentation is accurate\n- Works in both terminal and VS Code","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.928041-07:00","updated_at":"2025-10-15T01:11:09.709205-07:00","dependencies":[{"issue_id":"bd-57","depends_on_id":"bd-52","type":"parent-child","created_at":"2025-10-14T14:46:10.737369-07:00","created_by":"auto-import"}]}
{"id":"bd-58","title":"Parent's blocker should block children in ready work calculation","description":"GitHub issue #19: If epic1 blocks epic2, children of epic2 should also be considered blocked when calculating ready work. Currently epic2's children show as ready even though their parent is blocked. This breaks the natural hierarchy of dependencies and can cause agents to work on tasks out of order.\n\nExpected: ready work calculation should traverse up parent-child hierarchy and check if any ancestor has blocking dependencies.\n\nSee: https://github.com/anthropics/claude-code/issues/19","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.928389-07:00","updated_at":"2025-10-15T01:11:09.709551-07:00"}
{"id":"bd-59","title":"Add composite index on dependencies(depends_on_id, type)","description":"The hierarchical blocking query does:\nJOIN dependencies d ON d.depends_on_id = bt.issue_id\nWHERE d.type = 'parent-child'\n\nCurrently we only have idx_dependencies_depends_on (line 41 in schema.go), which covers depends_on_id but not the type filter.\n\n**Impact:**\n- Query has to scan ALL dependencies for a given depends_on_id, then filter by type\n- With 10k+ issues and many dependencies, this could cause slowdowns\n- The blocker propagation happens recursively, amplifying the cost\n\n**Solution:**\nAdd composite index: CREATE INDEX idx_dependencies_depends_on_type ON dependencies(depends_on_id, type)\n\n**Testing:**\nRun EXPLAIN QUERY PLAN on GetReadyWork query before/after to verify index usage.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.929017-07:00","updated_at":"2025-10-15T01:11:09.709931-07:00"}
{"id":"bd-6","title":"Add migration scripts for GitHub Issues","description":"Create scripts to import from GitHub Issues API or exported JSON","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.929582-07:00","updated_at":"2025-10-15T01:11:09.710329-07:00","dependencies":[{"issue_id":"bd-6","depends_on_id":"bd-8","type":"parent-child","created_at":"2025-10-14T14:43:06.960703-07:00","created_by":"auto-import"}]}
{"id":"bd-60","title":"Update ready_issues VIEW to use hierarchical blocking","description":"The ready_issues VIEW (schema.go:97-108) uses the OLD blocking logic that doesn't propagate through parent-child hierarchies.\n\n**Problem:**\n- GetReadyWork() function now uses recursive CTE with propagation\n- But the ready_issues VIEW still uses simple NOT EXISTS check\n- Any code using the VIEW will get DIFFERENT results than GetReadyWork()\n- This creates inconsistency and confusion\n\n**Impact:**\n- Unknown if the VIEW is actually used anywhere in the codebase\n- If it is used, it's returning incorrect results (showing children as ready when parent is blocked)\n\n**Solution:**\nEither:\n1. Update VIEW to match GetReadyWork logic (complex CTE in a view)\n2. Drop the VIEW entirely if unused\n3. Make VIEW call GetReadyWork as a function (if SQLite supports it)\n\n**Investigation needed:**\nGrep for 'ready_issues' to see if the view is actually used.","notes":"**Investigation results:**\nGrepped the codebase - the ready_issues VIEW appears in:\n- schema.go (definition)\n- WORKFLOW.md, DESIGN.md (documentation)\n- No actual Go code queries it directly\n\n**Conclusion:** The VIEW is defined but appears UNUSED by actual code. GetReadyWork() function is used instead.\n\n**Recommended solution:** Drop the VIEW entirely to avoid confusion. It serves no purpose if unused and creates a maintenance burden (needs to stay in sync with GetReadyWork logic).\n\n**Alternative:** If we want to keep it for direct SQL access, update the VIEW definition to match the new recursive CTE logic.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.930111-07:00","updated_at":"2025-10-15T01:11:09.711907-07:00"}
{"id":"bd-61","title":"Add test for deep hierarchy blocking (50+ levels)","description":"Current tests verify 2-level depth (grandparent → parent → child). The depth limit is hardcoded to 50 in the recursive CTE, but we don't test edge cases near that limit.\n\n**Test cases needed:**\n1. Verify 50-level deep hierarchy works correctly\n2. Verify depth limit prevents runaway recursion\n3. Measure performance impact of deep hierarchies\n4. Consider if 50 is the right limit (why not 100? why not 20?)\n\n**Rationale:**\n- Most hierarchies are 2-5 levels deep\n- But pathological cases (malicious or accidental) could create 50+ level nesting\n- Need to ensure graceful degradation, not catastrophic failure\n\n**Implementation:**\nAdd TestDeepHierarchyBlocking to ready_test.go","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.930479-07:00","updated_at":"2025-10-15T01:11:09.712306-07:00"}
{"id":"bd-62","title":"Document hierarchical blocking behavior in README","description":"The fix for bd-58 changes user-visible behavior: children of blocked epics are now automatically blocked.\n\n**What needs documenting:**\n1. README.md dependency section should explain blocking propagation\n2. Clarify that 'blocks' + 'parent-child' together create transitive blocking\n3. Note that 'related' and 'discovered-from' do NOT propagate blocking\n4. Add example showing epic → child blocking propagation\n\n**Example to add:**\n```bash\n# If epic is blocked, children are too\nbd create \"Epic 1\" -t epic -p 1\nbd create \"Task 1\" -t task -p 1\nbd dep add task-1 epic-1 --type parent-child\n\n# Block the epic\nbd create \"Blocker\" -t task -p 0\nbd dep add epic-1 blocker-1 --type blocks\n\n# Now both epic-1 AND task-1 are blocked\nbd ready  # Neither will show up\n```","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.930812-07:00","updated_at":"2025-10-15T01:11:09.712679-07:00"}
{"id":"bd-63","title":"Add EXPLAIN QUERY PLAN tests for ready work query","description":"Verify that the hierarchical blocking query uses proper indexes and doesn't do full table scans.\n\n**Queries to analyze:**\n1. The recursive CTE (both base case and recursive case)\n2. The final SELECT with NOT EXISTS\n3. Impact of various filters (status, priority, assignee)\n\n**Implementation:**\nAdd test function that:\n- Runs EXPLAIN QUERY PLAN on GetReadyWork query\n- Parses output to verify no SCAN TABLE operations\n- Documents expected query plan in comments\n- Fails if query plan degrades\n\n**Benefits:**\n- Catch performance regressions in tests\n- Document expected query behavior\n- Ensure indexes are being used\n\nRelated to: bd-59 (composite index on depends_on_id, type)","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.931295-07:00","updated_at":"2025-10-15T01:11:09.713045-07:00"}
{"id":"bd-64","title":"Verify and test Claude Code plugin","description":"Address remaining items from code review:\n\nCritical:\n1. Test plugin installation locally with /plugin marketplace add\n2. Verify ${CLAUDE_PLUGIN_ROOT} variable works correctly\n3. Test each slash command works\n4. Test @task-agent execution\n5. Verify MCP server connects properly\n\nDocumentation:\n1. Clarify 'one-command installation' vs prerequisites\n2. Add note about plugin development status\n3. Verify all paths and examples work\n\nNice-to-have:\n1. Add icon for marketplace (optional)\n2. Add categories field to plugin.json\n3. Add engines field for version compatibility","notes":"PLUGIN IMPLEMENTATION COMPLETE - READY FOR TESTING\n\nWhat was built:\n✅ .claude-plugin/plugin.json - Plugin metadata with MCP server config\n✅ .claude-plugin/marketplace.json - Marketplace configuration\n✅ 9 slash commands in .claude-plugin/commands/:\n   - bd-ready, bd-create, bd-show, bd-update, bd-close\n   - bd-workflow, bd-init, bd-stats, bd-version\n✅ Task agent in .claude-plugin/agents/task-agent.md\n✅ PLUGIN.md - Comprehensive documentation\n✅ README.md - Updated with plugin section\n✅ Version sync - All components at 0.9.2\n\nTesting Instructions for Next Agent:\n=====================================\n\n1. INSTALL PLUGIN FROM GITHUB:\n   /plugin marketplace add steveyegge/beads\n   /plugin install beads\n   \n2. RESTART CLAUDE CODE (required for MCP server)\n\n3. TEST SLASH COMMANDS:\n   /bd-version        # Check versions (should show 0.9.2)\n   /bd-workflow       # Show workflow guide\n   /bd-stats          # Show project stats\n   /bd-ready          # Find ready work\n   /bd-create \"Test plugin\" task 2\n   /bd-show bd-\u003cid\u003e\n   \n4. TEST MCP SERVER:\n   /mcp               # Verify 'beads' server appears\n   \n5. TEST TASK AGENT:\n   @task-agent        # If supported in Claude Code\n   \n6. VERIFY:\n   - All commands work without errors\n   - MCP tools are accessible\n   - Version checking works\n   - Documentation is accurate\n\nExpected Issues:\n- May need to adjust MCP server path variable (${CLAUDE_PLUGIN_ROOT})\n- Task agent syntax might differ\n- Some commands may need refinement based on actual usage\n\nIf testing fails, check:\n- bd CLI is in PATH: which bd\n- uv is installed: which uv\n- MCP server logs in Claude Code\n- PLUGIN.md troubleshooting section\n\nCommit references:\n- 9f38375: feat: Add Claude Code plugin for beads\n- d25fc53: feat: Add version compatibility checking\n- c0f1044: fix: Sync all component versions to 0.9.2\n- a5c71f0: feat: Add version bump script\n- a612b92: docs: Add version management to CLAUDE.md","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.931639-07:00","updated_at":"2025-10-15T01:11:09.713432-07:00","dependencies":[{"issue_id":"bd-64","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.961374-07:00","created_by":"auto-import"}]}
{"id":"bd-65","title":"Document versioning and release strategy","description":"Create comprehensive versioning strategy for beads ecosystem.\n\nComponents to document:\n1. bd CLI (Go binary) - main version number\n2. Plugin (Claude Code) - tracks CLI version\n3. MCP server (Python) - bundled with plugin\n4. Release workflow - how to sync all three\n\nDecisions to make:\n- Should plugin.json auto-update from bd CLI version?\n- Should we have a VERSION file at repo root?\n- How to handle breaking changes across components?\n- What's the update notification strategy?\n\nReferences:\n- plugin.json engines field now requires bd \u003e=0.9.0\n- /bd-version command added for checking compatibility\n- PLUGIN.md now documents update workflow","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.932054-07:00","updated_at":"2025-10-15T01:11:09.713813-07:00","dependencies":[{"issue_id":"bd-65","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.961927-07:00","created_by":"auto-import"}]}
{"id":"bd-66","title":"Sync versions to 0.9.2 across all components","description":"Version mismatch discovered: bd CLI is 0.9.2 but other components still at 0.9.0 or 1.0.0.\n\nCurrent state:\n- bd CLI (cmd/bd/version.go): 0.9.2 ✓\n- Plugin (.claude-plugin/plugin.json): 0.9.0 ✗\n- MCP Server (integrations/beads-mcp): 1.0.0 ✗\n- README.md: 0.9.0 ✗\n\nFiles to update:\n1. .claude-plugin/plugin.json\n2. integrations/beads-mcp/pyproject.toml\n3. README.md (all mentions)\n4. PLUGIN.md (if any mentions)\n5. CHANGELOG.md (add 0.9.1 and 0.9.2 entries)\n\nRoot cause: Version bumps only updated version.go, not other components.\nSolution needed: Script or process to sync versions across all files.","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-14T14:43:06.932512-07:00","updated_at":"2025-10-15T01:11:09.715445-07:00","dependencies":[{"issue_id":"bd-66","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.962388-07:00","created_by":"auto-import"}]}
{"id":"bd-67","title":"Create version bump script","description":"Create scripts/bump-version.sh to automate version syncing across all components.\n\nThe script should:\n1. Take a version number as argument (e.g., ./scripts/bump-version.sh 0.9.3)\n2. Update all version files:\n   - cmd/bd/version.go (Version constant)\n   - .claude-plugin/plugin.json (version field)\n   - .claude-plugin/marketplace.json (plugins[].version)\n   - integrations/beads-mcp/pyproject.toml (version field)\n   - README.md (Alpha version mention)\n   - PLUGIN.md (version requirements)\n3. Validate semantic versioning format\n4. Show diff preview before applying\n5. Optionally create git commit with standard message\n\nThis prevents the version mismatch issue that occurred when only version.go was updated.\n\nRelated: bd-66 (version sync issue)","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.933094-07:00","updated_at":"2025-10-15T01:11:09.715808-07:00","dependencies":[{"issue_id":"bd-67","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.962804-07:00","created_by":"auto-import"}]}
{"id":"bd-68","title":"Add system-wide/multi-repo support for beads","description":"GitHub issue #4 requests ability to use beads across multiple projects and for system-wide task tracking.\n\nCurrent limitation: beads is per-repository isolated. Each project has its own .beads/ directory and issues cannot reference issues in other projects.\n\nPotential approaches:\n1. Global beads instance in ~/.beads/global.db for cross-project work\n2. Project references - allow issues to link across repos\n3. Multi-project workspace support - one beads instance managing multiple repos\n4. Integration with existing MCP server to provide remote multi-project access\n\nUse cases:\n- System administrators tracking work across multiple machines/repos\n- Developers working on a dozen+ projects simultaneously\n- Cross-cutting concerns that span multiple repositories\n- Global todo list with project-specific subtasks\n\nRelated:\n- GitHub issue #4: https://github.com/steveyegge/beads/issues/4\n- Comparison to membank MCP which already supports multi-project via centralized server\n- MCP server at integrations/beads-mcp/ could be extended for this\n\nSee also: Testing framework for plugins (also from GH #4)","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.933446-07:00","updated_at":"2025-10-15T01:11:09.716167-07:00","dependencies":[{"issue_id":"bd-68","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.963228-07:00","created_by":"auto-import"}]}
{"id":"bd-69","title":"Add coverage threshold to CI pipeline","description":"Current CI runs tests with coverage but doesn't enforce minimum threshold. Add step to fail if coverage drops below target.\n\nCurrent coverage: 60%\nRecommended thresholds:\n- Warn: 55%\n- Fail: 50%\n\nThis prevents coverage regression while allowing gradual improvement toward 80% target for 1.0.\n\nImplementation:\n1. Add coverage check step after test run\n2. Use 'go tool cover -func=coverage.out' to get total\n3. Parse percentage and compare to threshold\n4. Optionally: Use codecov's built-in threshold features\n\nRelated to test coverage improvement work (upcoming issue).","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.93378-07:00","updated_at":"2025-10-15T01:11:09.71653-07:00","dependencies":[{"issue_id":"bd-69","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.963643-07:00","created_by":"auto-import"}]}
{"id":"bd-7","title":"Add performance benchmarks document","description":"Document actual performance metrics with hyperfine tests","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.934101-07:00","updated_at":"2025-10-15T01:11:09.716918-07:00","dependencies":[{"issue_id":"bd-7","depends_on_id":"bd-8","type":"parent-child","created_at":"2025-10-14T14:43:06.964048-07:00","created_by":"auto-import"}]}
{"id":"bd-70","title":"Increase test coverage for auto-flush and auto-import features","description":"Critical features have 0% test coverage despite being core workflow functionality.\n\n**Uncovered areas (0% coverage):**\n\nAuto-flush/Auto-import (dirty tracking):\n- MarkIssueDirty / MarkIssuesDirty\n- GetDirtyIssues / GetDirtyIssueCount\n- ClearDirtyIssues / ClearDirtyIssuesByID\n- Auto-flush debouncing logic\n- Auto-import hash comparison\n\nDatabase/file discovery:\n- FindDatabasePath (finds .beads/*.db in directory tree)\n- FindJSONLPath (finds issues.jsonl)\n- findDatabaseInTree helper\n\nLabel operations:\n- AddLabel / RemoveLabel\n- GetLabels / GetIssuesByLabel\n\nEvents/Comments:\n- AddComment\n- GetEvents\n- GetStatistics\n\nMetadata storage:\n- SetMetadata / GetMetadata (used for import hash tracking)\n\nCLI output formatting:\n- outputJSON\n- printCollisionReport / printRemappingReport\n- createIssuesFromMarkdown\n\n**Priority areas:**\n1. Auto-flush/import (highest risk - core workflow)\n2. Database discovery (second - affects all operations)\n3. Labels/events (lower priority - less commonly used)\n\n**Test approach:**\n- Add unit tests for dirty tracking in sqlite package\n- Add integration tests for auto-flush timing and debouncing\n- Add tests for import hash detection and idempotency\n- Add tests for database discovery edge cases (permissions, nested dirs)\n\n**Target:** Get overall coverage from 60% → 75%, focus on cmd/bd (currently 24.1%)\n\n**Note:** These features work well in practice (dogfooding proves it) but edge cases (disk full, permissions, concurrent access, race conditions) are untested.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.934425-07:00","updated_at":"2025-10-15T01:11:09.71728-07:00","dependencies":[{"issue_id":"bd-70","depends_on_id":"bd-71","type":"parent-child","created_at":"2025-10-14T14:43:06.96447-07:00","created_by":"auto-import"}]}
{"id":"bd-71","title":"Code review follow-up: Post-PR #8 merge improvements","description":"Follow-up tasks from the ultrathink code review of PR #8 merge (bd-62).\n\n**Context:** PR #8 successfully merged atomic counter + dirty tracking. Core functionality is solid but several improvements identified.\n\n**Critical (P0-P1):**\n- bd-64: Fix SyncAllCounters performance bottleneck (P0)\n- bd-65: Add migration for issue_counters table (P1)\n- bd-66: Make import counter sync failure fatal (P1)\n\n**Nice to have (P2-P3):**\n- bd-67: Update test comments (P2)\n- bd-68: Add performance benchmarks (P2)\n- bd-69: Add metrics/logging (P3)\n- bd-70: Add EXPLAIN QUERY PLAN tests (P3)\n\n**Overall assessment:** 4/5 stars - Excellent implementation with one critical performance issue. After bd-64 is fixed, this becomes 5/5.\n\n**Review document:** Available if needed","notes":"Status update: All P0-P1 critical tasks completed! bd-64 (performance), bd-65 (migration), bd-66 (fatal error), bd-67 (comments) are all done. Atomic counter implementation is now production-ready. Remaining tasks are P2-P3 enhancements.","status":"open","priority":1,"issue_type":"epic","created_at":"2025-10-14T14:43:06.934829-07:00","updated_at":"2025-10-15T01:11:09.717675-07:00"}
{"id":"bd-72","title":"Test performance - issue 1","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.935489-07:00","updated_at":"2025-10-15T01:11:09.718059-07:00"}
{"id":"bd-73","title":"Performance test 1","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.936059-07:00","updated_at":"2025-10-15T01:11:09.718627-07:00"}
{"id":"bd-74","title":"Performance test 2","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.936377-07:00","updated_at":"2025-10-15T01:11:09.719183-07:00"}
{"id":"bd-75","title":"Performance test 3","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.936719-07:00","updated_at":"2025-10-15T01:11:09.719592-07:00"}
{"id":"bd-76","title":"Performance test 4","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.937049-07:00","updated_at":"2025-10-15T01:11:09.720122-07:00"}
{"id":"bd-77","title":"Performance test 5","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.937471-07:00","updated_at":"2025-10-15T01:11:09.720543-07:00"}
{"id":"bd-78","title":"Performance test 6","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.937812-07:00","updated_at":"2025-10-15T01:11:09.720911-07:00"}
{"id":"bd-79","title":"Performance test 7","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.938343-07:00","updated_at":"2025-10-15T01:11:09.721504-07:00"}
{"id":"bd-8","title":"Reach 1.0 release milestone","description":"Stabilize API, finalize documentation, comprehensive testing","status":"open","priority":1,"issue_type":"epic","created_at":"2025-10-14T14:43:06.938911-07:00","updated_at":"2025-10-15T01:11:09.721936-07:00"}
{"id":"bd-80","title":"Performance test 8","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.939443-07:00","updated_at":"2025-10-15T01:11:09.722293-07:00"}
{"id":"bd-81","title":"Performance test 9","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.939983-07:00","updated_at":"2025-10-15T01:11:09.722635-07:00"}
{"id":"bd-82","title":"Performance test 10","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-14T14:43:06.940364-07:00","updated_at":"2025-10-15T01:11:09.722984-07:00"}
{"id":"bd-83","title":"Add external_ref field for tracking GitHub issues","description":"Add optional external_ref field to issues table to track external references like 'gh-9', 'jira-ABC', etc. Includes schema migration, CLI flags (--external-ref for create/update), and tests. This enables linking bd issues to GitHub issues for better workflow integration.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.940708-07:00","updated_at":"2025-10-15T01:11:09.724542-07:00"}
{"id":"bd-84","title":"Auto-import fails in git workflows due to mtime issues","description":"The auto-import mechanism (autoImportIfNewer) relies on file modification time comparison between JSONL and DB. This breaks in git workflows because git does not preserve original file modification times - pulled files get fresh mtimes based on checkout time.\n\nRoot causes:\n1. Git checkout sets mtime to 'now', not original commit time\n2. Auto-import compares JSONL mtime vs DB mtime (line 181 in main.go)\n3. If DB was recently modified (agents working), mtime check fails\n4. Auto-import silently returns without feedback\n5. Agents continue with stale database state\n\nThis caused issues in VC project where 3 parallel agents:\n- Pulled updated .beads/issues.jsonl from git\n- Auto-import didn't trigger (JSONL appeared older than DB)\n- Agents couldn't find their assigned issues\n- Agents exported from wrong database, corrupting JSONL","design":"Recommended approach: Checksum-based sync (option 3 from original design)\n\n## Solution: Hash-based content comparison\n\nReplace mtime comparison with JSONL content hash comparison:\n\n1. **Compute JSONL hash on startup**:\n   - SHA256 hash of .beads/issues.jsonl contents\n   - Fast enough for typical repos (\u003c1MB = ~20ms)\n   - Only computed once per command invocation\n\n2. **Store last import hash in DB**:\n   - Add metadata table if not exists: CREATE TABLE IF NOT EXISTS metadata (key TEXT PRIMARY KEY, value TEXT)\n   - Store hash after successful import: INSERT OR REPLACE INTO metadata (key, value) VALUES ('last_import_hash', '\u003chash\u003e')\n   - Query on startup: SELECT value FROM metadata WHERE key = 'last_import_hash'\n\n3. **Compare hashes instead of mtimes**:\n   - If JSONL hash != stored hash: auto-import (content changed)\n   - If JSONL hash == stored hash: skip import (no changes)\n   - If no stored hash: fall back to mtime comparison (backward compat)\n\n4. **Update autoImportIfNewer() in cmd/bd/main.go**:\n   - Lines 155-279 currently use mtime comparison (line 181)\n   - Replace with hash comparison\n   - Keep mtime as fallback for old DBs without metadata table\n\n## Implementation Details\n\n### New storage interface method:\n```go\n// In internal/storage/storage.go\ntype Storage interface {\n    // ... existing methods ...\n    GetMetadata(ctx context.Context, key string) (string, error)\n    SetMetadata(ctx context.Context, key, value string) error\n}\n```\n\n### Migration:\n```go\n// In internal/storage/sqlite/sqlite.go init\nCREATE TABLE IF NOT EXISTS metadata (\n    key TEXT PRIMARY KEY,\n    value TEXT NOT NULL\n);\n```\n\n### Updated autoImportIfNewer():\n```go\nfunc autoImportIfNewer() {\n    jsonlPath := findJSONLPath()\n    \n    // Check if JSONL exists\n    jsonlData, err := os.ReadFile(jsonlPath)\n    if err != nil {\n        return // No JSONL, skip\n    }\n    \n    // Compute current hash\n    hasher := sha256.New()\n    hasher.Write(jsonlData)\n    currentHash := hex.EncodeToString(hasher.Sum(nil))\n    \n    // Get last import hash from DB\n    ctx := context.Background()\n    lastHash, err := store.GetMetadata(ctx, \"last_import_hash\")\n    if err != nil {\n        // No metadata support (old DB) - fall back to mtime comparison\n        autoImportIfNewerByMtime()\n        return\n    }\n    \n    // Compare hashes\n    if currentHash == lastHash {\n        return // No changes, skip import\n    }\n    \n    // Content changed - import\n    if err := importJSONLSilent(jsonlPath, jsonlData); err != nil {\n        return // Import failed, skip\n    }\n    \n    // Store new hash\n    _ = store.SetMetadata(ctx, \"last_import_hash\", currentHash)\n}\n```\n\n## Benefits\n\n- **Git-proof**: Works regardless of file timestamps\n- **Universal**: Works with git, Dropbox, rsync, manual edits\n- **Backward compatible**: Falls back to mtime for old DBs\n- **Efficient**: SHA256 is fast (~20ms for 1MB)\n- **Accurate**: Only imports when content actually changed\n- **No user action**: Fully automatic, invisible\n\n## Performance Optimization\n\nFor very large repos (\u003e10MB JSONL):\n- Only hash if mtime changed (combine both checks)\n- Use incremental hashing if metadata table tracks line count\n- Consider sampling hash (first 1MB + last 1MB)\n\nBut start simple - full hash is fast enough for 99% of use cases.\n\n## Rollout Plan\n\n1. Add metadata table + Get/SetMetadata methods (backward compatible)\n2. Update autoImportIfNewer() with hash logic + mtime fallback\n3. Test with old and new DBs\n4. Ship in next minor version (v0.10.0)\n5. Document in CHANGELOG as \"more reliable auto-import\"\n6. Git hooks remain optional but unnecessary for most users","acceptance_criteria":"- Auto-import works correctly after git pull\n- Agents in parallel workflows see consistent database state\n- Clear feedback when import is needed\n- Performance acceptable for large databases\n- Works in both git and non-git workflows\n- Documentation updated with multi-agent best practices","status":"in_progress","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.941275-07:00","updated_at":"2025-10-15T01:11:09.725015-07:00"}
{"id":"bd-85","title":"GH-1: Fix bd dep tree graph display issues","description":"Tree display has several issues: 1) Epic items may not expand all sub-items, 2) Subitems repeat multiple times at same level, 3) Items with multiple blockers appear multiple times. The tree visualization doesn't properly handle graph structures with multiple dependencies.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.941898-07:00","updated_at":"2025-10-15T01:11:09.725786-07:00","external_ref":"gh-1"}
{"id":"bd-86","title":"GH-2: Evaluate optional Turso backend for collaboration","description":"RFC proposal for optional Turso/libSQL backend to enable: database branching, near-real-time sync between agents/humans, native vector search, browser-ready persistence (WASM/OPFS), and concurrent writes. Would be opt-in, keeping current JSONL+SQLite as default. Requires storage driver interface.","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.942254-07:00","updated_at":"2025-10-15T01:11:09.726282-07:00","external_ref":"gh-2"}
{"id":"bd-87","title":"GH-3: Debug zsh killed error on bd init","description":"User reports 'zsh: killed bd init' when running bd init or just bd command. Likely a crash or signal. Need to reproduce and investigate cause.","status":"open","priority":1,"issue_type":"bug","created_at":"2025-10-14T14:43:06.942576-07:00","updated_at":"2025-10-15T01:11:09.726732-07:00","external_ref":"gh-3"}
{"id":"bd-88","title":"GH-4: Consider system-wide/multi-repo beads usage","description":"User wants to use beads across multiple repositories and for sysadmin tasks. Currently beads is project-scoped (.beads/ directory). Explore options for system-wide issue tracking that spans multiple repos. Related question: how does beads compare to membank MCP?","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-14T14:43:06.942895-07:00","updated_at":"2025-10-15T01:11:09.728232-07:00","external_ref":"gh-4"}
{"id":"bd-89","title":"GH-6: Fix race condition in parallel issue creation","description":"Creating multiple issues rapidly in parallel causes 'UNIQUE constraint failed: issues.id' error. The ID generation has a race condition. Reproducible with: for i in {26..35}; do ./bd create parallel_ 2\u003e\u00261 \u0026 done","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-14T14:43:06.943239-07:00","updated_at":"2025-10-15T01:13:08.412107-07:00","closed_at":"2025-10-15T01:13:08.412107-07:00","external_ref":"gh-6"}
{"id":"bd-9","title":"Build collision resolution tooling for distributed branch workflows","description":"When branches diverge and both create issues, auto-incrementing IDs collide on merge. Build excellent tooling to detect collisions during import, auto-renumber issues with fewer dependencies, update all references in descriptions and dependency links, and provide clear user feedback. Goal: keep beautiful brevity of numeric IDs (bd-302) while handling distributed creation gracefully.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-14T14:43:06.943629-07:00","updated_at":"2025-10-15T01:11:09.7294-07:00"}
{"id":"bd-90","title":"GH-7: Package available in AUR (beads-git)","description":"Community member created AUR package for Arch Linux: https://aur.archlinux.org/packages/beads-git. This is informational - no action needed, but good to track for release process and documentation.","status":"open","priority":4,"issue_type":"chore","created_at":"2025-10-14T14:43:06.943974-07:00","updated_at":"2025-10-15T01:11:09.729975-07:00","external_ref":"gh-7"}
{"id":"bd-91","title":"GH-9: Support markdown files in bd create","description":"Request to support markdown files as input to bd create, which would parse the markdown and split it into multiple issues. Use case: developers keep feature drafts in markdown files in version control, then want to convert them into issues. Example: bd create -f feature-draft.md","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.944561-07:00","updated_at":"2025-10-15T01:11:09.730443-07:00","external_ref":"gh-9"}
{"id":"bd-92","title":"GH-11: Add Docker support for hosted/shared instance","description":"Request for Docker container hosting to use beads across multiple dev machines. Would need to consider: centralized database (PostgreSQL?), authentication, concurrent access, API server, etc. This is a significant architectural change from the current local-first model.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.945147-07:00","updated_at":"2025-10-15T01:11:09.730991-07:00","external_ref":"gh-11"}
{"id":"bd-93","title":"GH-18: Add --deps flag to bd create for one-command issue creation","description":"Request to add dependency specification to bd create command instead of requiring separate 'bd dep add' command. Proposed syntax: bd create 'Fix bug' --deps discovered-from=bd-20. This would be especially useful for aider integration and reducing command verbosity.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-14T14:43:06.945679-07:00","updated_at":"2025-10-15T01:11:09.731448-07:00","external_ref":"gh-18"}
{"id":"bd-94","title":"parallel_test_1","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.946176-07:00","updated_at":"2025-10-15T01:11:09.731918-07:00"}
{"id":"bd-95","title":"parallel_test_4","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.946509-07:00","updated_at":"2025-10-15T01:11:09.732356-07:00"}
{"id":"bd-96","title":"parallel_test_7","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.946887-07:00","updated_at":"2025-10-15T01:11:09.732807-07:00"}
{"id":"bd-97","title":"parallel_test_6","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.947256-07:00","updated_at":"2025-10-15T01:11:09.733203-07:00"}
{"id":"bd-98","title":"parallel_test_5","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.947803-07:00","updated_at":"2025-10-15T01:11:09.733665-07:00"}
{"id":"bd-99","title":"parallel_test_2","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-14T14:43:06.948343-07:00","updated_at":"2025-10-15T01:11:09.734076-07:00"}
{"id":"test-100","title":"Test issue with explicit ID","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.948874-07:00","updated_at":"2025-10-15T01:11:09.734534-07:00"}
{"id":"test-500","title":"Root issue for dep tree test","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.949236-07:00","updated_at":"2025-10-15T01:11:09.735061-07:00","dependencies":[{"issue_id":"test-500","depends_on_id":"test-501","type":"blocks","created_at":"2025-10-14T14:43:06.965046-07:00","created_by":"auto-import"},{"issue_id":"test-500","depends_on_id":"test-502","type":"blocks","created_at":"2025-10-14T14:43:06.965697-07:00","created_by":"auto-import"}]}
{"id":"test-501","title":"Dependency A","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.94957-07:00","updated_at":"2025-10-15T01:11:09.735486-07:00","dependencies":[{"issue_id":"test-501","depends_on_id":"test-503","type":"blocks","created_at":"2025-10-14T14:43:06.966217-07:00","created_by":"auto-import"}]}
{"id":"test-502","title":"Dependency B","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.949896-07:00","updated_at":"2025-10-15T01:11:09.735892-07:00","dependencies":[{"issue_id":"test-502","depends_on_id":"test-503","type":"blocks","created_at":"2025-10-14T14:43:06.966666-07:00","created_by":"auto-import"}]}
{"id":"test-503","title":"Shared dependency C","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.950234-07:00","updated_at":"2025-10-15T01:11:09.736492-07:00"}
{"id":"test-600","title":"Epic test","description":"","status":"closed","priority":1,"issue_type":"epic","created_at":"2025-10-14T14:43:06.950813-07:00","updated_at":"2025-10-15T01:11:09.736996-07:00","dependencies":[{"issue_id":"test-600","depends_on_id":"test-601","type":"parent-child","created_at":"2025-10-14T14:43:06.967085-07:00","created_by":"auto-import"},{"issue_id":"test-600","depends_on_id":"test-602","type":"parent-child","created_at":"2025-10-14T14:43:06.967444-07:00","created_by":"auto-import"}]}
{"id":"test-601","title":"Task A under epic","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.951197-07:00","updated_at":"2025-10-15T01:11:09.737518-07:00","dependencies":[{"issue_id":"test-601","depends_on_id":"test-603","type":"blocks","created_at":"2025-10-14T14:43:06.967826-07:00","created_by":"auto-import"}]}
{"id":"test-602","title":"Task B under epic","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.951793-07:00","updated_at":"2025-10-15T01:11:09.738078-07:00","dependencies":[{"issue_id":"test-602","depends_on_id":"test-604","type":"blocks","created_at":"2025-10-14T14:43:06.968317-07:00","created_by":"auto-import"}]}
{"id":"test-603","title":"Sub-task under A","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.952283-07:00","updated_at":"2025-10-15T01:11:09.738535-07:00"}
{"id":"test-604","title":"Sub-task under B","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.952684-07:00","updated_at":"2025-10-15T01:11:09.738916-07:00"}
{"id":"worker2-500","title":"Another explicit ID","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-14T14:43:06.953035-07:00","updated_at":"2025-10-15T01:11:09.739273-07:00"}
